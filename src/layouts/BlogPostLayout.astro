---
import PostHeader from "@/components/PostHeader.astro";
import MainLayout from "./MainLayout.astro";
import CategoryCloud from "@/components/CategoryCloud.astro";
import RelatedPosts from "@/components/RelatedPosts.astro";
import { formatBlogPosts } from "@/js/utils";

const { data } = Astro.props;

const allPosts = await Astro.glob("../pages/blog/*.md"); // change to mdx, if it messes with your new learning
const formattedPosts = formatBlogPosts(allPosts);

const allRelatedPosts = formattedPosts.filter((post) => {
  return post.data.category === data.category && post.data.title !== data.title;
});

const displayedRelatedPosts = (numberOfPostsDisplayed: number) => {
  return allRelatedPosts.slice(0, numberOfPostsDisplayed);
};

const { title, description, date, category, author, image } = data;
---

<MainLayout title={title} {description} `>
  <PostHeader {title} {description} {date} {category} {author} {image} />
  <div class="post-content">
    <div class="content">
      <slot />
    </div>
    <div class="sidebar">
      <aside class="container" aria-label="Blog categories">
        <h2 class="h3">Blog Categories</h2>
        <CategoryCloud />
      </aside><aside class="container" aria-label="Related posts">
        <h2 class="h3">Related Posts</h2>
        {
          displayedRelatedPosts(2).map((post) => (
            <RelatedPosts data={post.data} url={post.url} />
          ))
        }
      </aside>
    </div>
  </div>
</MainLayout>

<style>
  .h3 {
    justify-self: center;
  }

  .post-content {
    justify-items: center;
  }

  @media screen and (min-width: 766px) {
    .post-content {
      grid-template-columns: 4fr 1fr;
      gap: 1rem;
    }
    .sidebar {
      align-content: start;
    }
  }
</style>
