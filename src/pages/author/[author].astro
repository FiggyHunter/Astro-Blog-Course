---
import { slugify } from "@/js/utils.ts";

import MainLayout from "@/layouts/MainLayout.astro";

import { formatBlogPosts } from "@/js/utils";
import PostCard from "@/components/PostCard.astro";

export async function getStaticPaths() {
  // array of static paths
  const allPosts = await Astro.glob("../blog/*.md"); // change to mdx, if it messes with your new learning
  const formattedPosts = formatBlogPosts(allPosts);
  const allAuthors = [
    ...new Set(formattedPosts.map((post) => post.frontmatter.author).flat()),
  ];

  return allAuthors.map((author) => {
    const authorPosts = formattedPosts.filter(
      (post) => post.frontmatter.author === author
    );

    console.log(author);

    return {
      params: { author: slugify(author) },
      props: { authorName: author, relevantPosts: authorPosts },
    };
  });
}

const { author } = Astro.params;
const { authorName, relevantPosts } = Astro.props;
---

<MainLayout title={authorName}>
  <section class="container" aria-label=`Posts written by ${authorName}`>
    <h1 class="h1">Posts written by <span>{authorName}</span></h1>
    <div class="post-container"></div>
    {
      relevantPosts.map(({ frontmatter, url }) => (
        <PostCard {frontmatter} {url}>
          {" "}
        </PostCard>
      ))
    }
  </section>
</MainLayout>
